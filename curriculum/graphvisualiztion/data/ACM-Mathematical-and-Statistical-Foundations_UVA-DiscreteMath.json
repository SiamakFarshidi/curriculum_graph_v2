{"nodes": [{"id": "3", "label": "Discrete Math", "group": "3", "shape": "circle", "description": "Discrete Math: "}, {"id": "3.1", "label": "Introduction and Propositional Logic", "group": "3", "shape": "box", "description": "Introduction and Propositional Logic: An overview of propositional logic, which deals with propositions or statements that are either true or false."}, {"id": "3.1.1", "label": "Propositional Logic", "group": "3", "shape": "ellipse", "description": "Propositional Logic: The formal system of logic that represents propositions using variables and logical connectives such as AND, OR, and NOT."}, {"id": "3.1.3", "label": "Proofs and Inferences", "group": "3", "shape": "ellipse", "description": "Proofs and Inferences: Methods for demonstrating the validity of propositional statements, often using logical rules and inference techniques."}, {"id": "3.1.5", "label": "Informal Proofs", "group": "3", "shape": "ellipse", "description": "Informal Proofs: Proofs that use natural language and intuitive reasoning to demonstrate the validity of propositions, often found in everyday discourse and mathematical exposition."}, {"id": "3.2", "label": "Recursion", "group": "3", "shape": "box", "description": "Recursion: A programming technique where a function calls itself in order to solve problems that can be broken down into smaller, similar subproblems."}, {"id": "3.2.1", "label": "Proofs over Formulae", "group": "3", "shape": "ellipse", "description": "Proofs over Formulae: Demonstrating the correctness or properties of mathematical formulae through deductive reasoning and logical inference."}, {"id": "3.2.2", "label": "Recursive Definitions", "group": "3", "shape": "ellipse", "description": "Recursive Definitions: Definitions that refer to themselves in their own definition, often used to define mathematical structures or functions."}, {"id": "3.2.4", "label": "More Complex Recursive Definitions", "group": "3", "shape": "ellipse", "description": "More Complex Recursive Definitions: Recursive definitions that involve multiple base cases or conditions, leading to more intricate structures or behaviors."}, {"id": "3.3", "label": "Predicate Logic", "group": "3", "shape": "box", "description": "Predicate Logic: "}, {"id": "3.3.1", "label": "Predicates and Quantifiers", "group": "3", "shape": "ellipse", "description": "Predicates and Quantifiers: Predicate logic extends propositional logic by introducing predicates, which are functions that map objects to truth values, and quantifiers,"}, {"id": "3.3.2", "label": "Nested Quantifiers", "group": "3", "shape": "ellipse", "description": "Nested Quantifiers: Nested Quantifiers: In predicate logic, quantifiers can be nested within each other to express statements about relationships between multiple variables or objects."}, {"id": "3.4", "label": "Proofs in First Order Logic", "group": "3", "shape": "box", "description": "Proofs in First Order Logic: Proofs in First Order Logic: First-order logic allows for the formal proof of statements using rules of inference and axioms, with the aim of establishing the truth of universally quantified statements."}, {"id": "3.4.3", "label": "Mathematical Induction", "group": "3", "shape": "ellipse", "description": "Mathematical Induction: Mathematical Induction: Mathematical induction is a proof technique used to establish the truth of statements about natural numbers by proving a base case and then showing that if the statement holds for one natural number, it also holds for the next."}, {"id": "3.4.4", "label": "Strong Induction", "group": "3", "shape": "ellipse", "description": "Strong Induction: Strong Induction: Strong induction is a variant of mathematical induction that allows the assumption that the statement holds for all previous natural numbers up to a given value, rather than just the immediately preceding number."}, {"id": "3.5", "label": "Set Theory", "group": "3", "shape": "box", "description": "Set Theory: "}, {"id": "3.5.1", "label": "Sets", "group": "3", "shape": "ellipse", "description": "Sets: Sets: Sets are collections of distinct objects, considered as a single entity. They are fundamental in mathematics and used to represent groups of elements with common properties."}, {"id": "3.5.2", "label": "Operations with Sets", "group": "3", "shape": "ellipse", "description": "Operations with Sets: Operations with Sets: Sets can undergo various operations, including union, intersection, difference, and complement, allowing for manipulation and comparison of sets."}, {"id": "3.5.3", "label": "Relations", "group": "3", "shape": "ellipse", "description": "Relations: Relations: Relations are associations between elements of sets. They can be represented as sets of ordered pairs and are used to describe connections or interactions between objects."}, {"id": "3.5.4", "label": "Equivalence Relations", "group": "3", "shape": "ellipse", "description": "Equivalence Relations: Equivalence Relations: Equivalence relations are a special type of relation that satisfy three properties: reflexivity, symmetry, and transitivity. They partition a set into disjoint subsets called equivalence classes."}, {"id": "3.5.5", "label": "Functions", "group": "3", "shape": "ellipse", "description": "Functions: Functions: Functions are mathematical constructs that relate elements of one set (the domain) to elements of another set (the codomain). They assign exactly one output to each input and are essential for modeling relationships between objects."}, {"id": "3.5.6", "label": "Cardinality of sets", "group": "3", "shape": "ellipse", "description": "Cardinality of sets: Cardinality of Sets: The cardinality of a set is the measure of its size, representing the number of elements it contains. It can be finite or infinite, and different techniques, such as counting and bijections, are used to determine cardinality."}, {"id": "3.7", "label": "Combinatorics", "group": "3", "shape": "box", "description": "Combinatorics: "}, {"id": "3.7.1", "label": "The Basics of Counting", "group": "3", "shape": "ellipse", "description": "The Basics of Counting: The Basics of Counting: Combinatorics deals with counting, arranging, and choosing objects. It includes fundamental concepts such as permutations, combinations, and the principle of inclusion-exclusion."}, {"id": "3.7.3", "label": "Binomial Coefficients and Identities", "group": "3", "shape": "ellipse", "description": "Binomial Coefficients and Identities: Binomial Coefficients and Identities: Binomial coefficients represent the number of ways to choose k elements from a set of n elements."}, {"id": "3.8", "label": "Graphs", "group": "3", "shape": "box", "description": "Graphs: "}, {"id": "3.8.6", "label": "Representing Graphs and Graph Isomorphisms", "group": "3", "shape": "ellipse", "description": "Representing Graphs and Graph Isomorphisms: Representing Graphs and Graph Isomorphisms: Graphs can be represented using various data structures, such as adjacency matrices or adjacency lists. Graph isomorphism deals with determining whether two graphs are structurally identical, despite differences in vertex labeling or edge orientation."}, {"id": "8", "label": "Mathematical and Statistical Foundations", "group": "8", "shape": "circle", "description": "Mathematical and Statistical Foundations: "}, {"id": "8.1", "label": "Sets, Relations, and Functions", "group": "8", "shape": "box", "description": "Sets, Relations, and Functions: "}, {"id": "8.1.1", "label": "Sets", "group": "8", "shape": "ellipse", "description": "Sets: are collections of distinct elements or objects."}, {"id": "8.1.1.2", "label": "Union, intersection, complement", "group": "8", "shape": "square", "description": "Union, intersection, complement: Union combines elements from multiple sets, while intersection finds common elements between sets, and complement finds elements unique to one set."}, {"id": "8.1.1.5", "label": "Cardinality of finite sets", "group": "8", "shape": "square", "description": "Cardinality of finite sets: refers to the number of elements in a set, typically denoted by the symbol |S|, where S is the set."}, {"id": "8.1.2", "label": "Relations", "group": "8", "shape": "ellipse", "description": "Relations: describe the relationships between elements in sets, such as equality, ordering, or membership."}, {"id": "8.1.2.1", "label": "Reflexivity, symmetry, transitivity", "group": "8", "shape": "square", "description": "Reflexivity, symmetry, transitivity: Reflexivity indicates that every element is related to itself in a relation, symmetry means if a is related to b, then b is related to a, and transitivity implies that if a is related to b and b is related to c, then a is related to c."}, {"id": "8.1.2.2", "label": "Equivalence relations, partial orders", "group": "8", "shape": "square", "description": "Equivalence relations, partial orders: Equivalence relations are relations that are reflexive, symmetric, and transitive, while partial orders are reflexive, antisymmetric, and transitive."}, {"id": "8.1.3", "label": "Functions", "group": "8", "shape": "ellipse", "description": "Functions: map elements from one set to another, ensuring that each element in the domain is related to exactly one element in the codomain."}, {"id": "8.2", "label": "Basic Logic", "group": "8", "shape": "box", "description": "Basic Logic: "}, {"id": "8.2.1", "label": "Propositional logic", "group": "8", "shape": "ellipse", "description": "Propositional logic: Propositional logic deals with propositions or statements that are either true or false."}, {"id": "8.2.2", "label": "Logical connectives", "group": "8", "shape": "ellipse", "description": "Logical connectives: logical connectives include AND (\u2227), OR (\u2228), NOT (\u00ac), IMPLICATION (\u2192), and BICONDITIONAL (\u2194), used to combine or modify propositions."}, {"id": "8.2.7", "label": "Predicate logic", "group": "8", "shape": "ellipse", "description": "Predicate logic: Predicate logic extends propositional logic to deal with predicates and quantifiers, including universal (\u2200) and existential (\u2203) quantification."}, {"id": "8.2.8", "label": "Limitations of propositional and predicate logic ", "group": "8", "shape": "ellipse", "description": "Limitations of propositional and predicate logic : e.g., expressiveness issues"}, {"id": "8.3", "label": "Proof Techniques", "group": "8", "shape": "box", "description": "Proof Techniques: involve methods for demonstrating the truth or validity of mathematical statements."}, {"id": "8.3.2", "label": "The structure of mathematical proofs", "group": "8", "shape": "ellipse", "description": "The structure of mathematical proofs: involves logical reasoning and argumentation to establish the validity of mathematical statements."}, {"id": "8.3.3", "label": "Direct proofs", "group": "8", "shape": "ellipse", "description": "Direct proofs: demonstrate the truth of a statement by providing a straightforward argument based on known facts or axioms."}, {"id": "8.3.6", "label": "Induction over natural numbers", "group": "8", "shape": "ellipse", "description": "Induction over natural numbers: is a proof technique used to establish the truth of statements for all natural numbers, typically based on two principles: weak induction and strong induction."}, {"id": "8.3.8", "label": "Weak and strong induction", "group": "8", "shape": "ellipse", "description": "Weak and strong induction: (i.e., First and Second Principle of Induction)"}, {"id": "8.3.9", "label": "Recursive mathematical definitions", "group": "8", "shape": "ellipse", "description": "Recursive mathematical definitions: define objects or functions in terms of themselves, often used in proofs involving induction."}, {"id": "8.4", "label": "Basics of Counting", "group": "8", "shape": "box", "description": "Basics of Counting: involve techniques for determining the number of elements in a set or the number of ways to arrange or select elements."}, {"id": "8.4.1", "label": "Counting arguments", "group": "8", "shape": "ellipse", "description": "Counting arguments: use logical reasoning to calculate the number of outcomes or possibilities in a given scenario."}, {"id": "8.4.1.1", "label": "Set cardinality and counting", "group": "8", "shape": "square", "description": "Set cardinality and counting: Set cardinality refers to the number of elements in a set, while counting involves determining the cardinality of sets using various methods."}, {"id": "8.4.3", "label": "Permutations and combinations", "group": "8", "shape": "ellipse", "description": "Permutations and combinations: 1, Basic definitions. 2, Pascal\u2019s identity. 3, The binomial theorem "}, {"id": "8.6", "label": "Graphs and Trees", "group": "8", "shape": "box", "description": "Graphs and Trees: "}, {"id": "8.6.6", "label": "Graph isomorphism", "group": "8", "shape": "ellipse", "description": "Graph isomorphism: refers to the equivalence between two graphs, where the structures of the graphs are the same but the labels of the vertices may differ."}], "edges": [{"from": "8.1", "to": "8.1.1", "title": ""}, {"from": "8", "to": "8.1", "title": ""}, {"from": "3.5", "to": "3.5.1", "title": ""}, {"from": "3", "to": "3.5", "title": ""}, {"from": "8.1.1", "to": "8.1.1.2", "title": ""}, {"from": "3.5", "to": "3.5.2", "title": ""}, {"from": "8.1.1", "to": "8.1.1.5", "title": ""}, {"from": "3.5", "to": "3.5.6", "title": ""}, {"from": "8.1", "to": "8.1.2", "title": ""}, {"from": "3.5", "to": "3.5.3", "title": ""}, {"from": "3.5", "to": "3.5.4", "title": ""}, {"from": "8.1.2", "to": "8.1.2.1", "title": ""}, {"from": "8.1.2", "to": "8.1.2.2", "title": ""}, {"from": "8.1", "to": "8.1.3", "title": ""}, {"from": "3.5", "to": "3.5.5", "title": ""}, {"from": "8", "to": "8.2", "title": ""}, {"from": "3", "to": "3.3", "title": ""}, {"from": "8.2", "to": "8.2.1", "title": ""}, {"from": "3", "to": "3.1", "title": ""}, {"from": "3.1", "to": "3.1.1", "title": ""}, {"from": "3.3", "to": "3.3.1", "title": ""}, {"from": "8.2", "to": "8.2.2", "title": ""}, {"from": "8.2", "to": "8.2.7", "title": ""}, {"from": "3.3", "to": "3.3.2", "title": ""}, {"from": "8.2", "to": "8.2.8", "title": ""}, {"from": "8", "to": "8.3", "title": ""}, {"from": "3.1", "to": "3.1.3", "title": ""}, {"from": "3.1", "to": "3.1.5", "title": ""}, {"from": "3.2", "to": "3.2.1", "title": ""}, {"from": "3", "to": "3.2", "title": ""}, {"from": "8.3", "to": "8.3.2", "title": ""}, {"from": "8.3", "to": "8.3.3", "title": ""}, {"from": "8.3", "to": "8.3.6", "title": ""}, {"from": "3.4", "to": "3.4.3", "title": ""}, {"from": "3", "to": "3.4", "title": ""}, {"from": "3.4", "to": "3.4.4", "title": ""}, {"from": "8.3", "to": "8.3.8", "title": ""}, {"from": "8.3", "to": "8.3.9", "title": ""}, {"from": "3.2", "to": "3.2.2", "title": ""}, {"from": "3.2", "to": "3.2.4", "title": ""}, {"from": "8", "to": "8.4", "title": ""}, {"from": "3.7", "to": "3.7.1", "title": ""}, {"from": "3", "to": "3.7", "title": ""}, {"from": "8.4.1", "to": "8.4.1.1", "title": ""}, {"from": "8.4", "to": "8.4.1", "title": ""}, {"from": "8.4", "to": "8.4.3", "title": ""}, {"from": "3.7", "to": "3.7.3", "title": ""}, {"from": "8", "to": "8.6", "title": ""}, {"from": "3", "to": "3.8", "title": ""}, {"from": "8.6", "to": "8.6.6", "title": ""}, {"from": "3.8", "to": "3.8.6", "title": ""}, {"from": "8.1.1", "to": "3.5.1", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.1.1.2", "to": "3.5.2", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.1.1.5", "to": "3.5.6", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.1.2", "to": "3.5.3", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.1.2", "to": "3.5.4", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.1.2.1", "to": "3.5.4", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.1.2.2", "to": "3.5.4", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.1.3", "to": "3.5.5", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.2", "to": "3.3", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.2.1", "to": "3.1", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.2.1", "to": "3.1.1", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.2.1", "to": "3.3.1", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.2.2", "to": "3.1.1", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.2.7", "to": "3.3", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.2.7", "to": "3.3.1", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.2.7", "to": "3.3.2", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.2.8", "to": "3.3.1", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.3", "to": "3.1.3", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.3", "to": "3.1.5", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.3", "to": "3.2.1", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.3.2", "to": "3.1.5", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.3.2", "to": "3.2.1", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.3.3", "to": "3.1.5", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.3.6", "to": "3.4.3", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.3.6", "to": "3.4.4", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.3.8", "to": "3.4.4", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.3.9", "to": "3.2", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.3.9", "to": "3.2.2", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.3.9", "to": "3.2.4", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.4", "to": "3.7.1", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.4.1.1", "to": "3.5.6", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.4.3", "to": "3.7.3", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.6", "to": "3.8", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}, {"from": "8.6.6", "to": "3.8.6", "title": "", "length": 900, "color": "grey", "width": 1, "shadow": false, "dashes": true}], "courseId": ["8", "3"]}